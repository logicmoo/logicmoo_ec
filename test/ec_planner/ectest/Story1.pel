:-was_s_l('/pack/logicmoo_ec/test/ec_planner/ectest/sanity_equals_04.e',39).
:- call_pel_directive(translate(unskipped,
                                '/pack/logicmoo_ec/test/ec_planner/ectest/Story1.pel')).
:-include(library('ec_planner/ec_test_incl')).
:-expects_dialect(ecalc).
:- call_pel_directive(translate(begining,
                                '/pack/logicmoo_ec/test/ec_planner/ectest/Story1.pel')).


:-was_s_l('/pack/logicmoo_ec/test/ec_planner/ectest/sanity_equals_04.e',39).
%;
%; Copyright (c) 2005 IBM Corporation and others.
%; All rights reserved. This program and the accompanying materials
%; are made available under the terms of the Common Public License v1.0
%; which accompanies this distribution, and is available at
%; http://www.eclipse.org/legal/cpl-v10.html
%;
%; Contributors:
%; IBM - Initial implementation
%;
%; @article{FrankEtAl:2003,
%;   author = "Stefan L. Frank and Mathieu Koppen and Leo G. M. Noordman and Wietske Vonk",
%;   year = "2003",
%;   title = "Modeling knowledge-based inferences in story comprehension",
%;   journal = "Cognitive Science",
%;   volume = "27",
%;   pages = "875--910",
%; }
%;

:-was_s_l('/pack/logicmoo_ec/test/ec_planner/ectest/Story1.e',21).
% option modeldiff on
:- call_pel_directive(option(modeldiff, on)).

:-was_s_l('/pack/logicmoo_ec/test/ec_planner/ectest/Story1.e',23).
% load foundations/Root.e
:- call_pel_directive(load('foundations/Root.e')).

% load foundations/EC.e
:- call_pel_directive(load('foundations/EC.e')).

:-was_s_l('/pack/logicmoo_ec/test/ec_planner/ectest/Story1.e',26).
% sort agent
sort(agent).

:-was_s_l('/pack/logicmoo_ec/test/ec_planner/ectest/Story1.e',28).
% include examples/FrankEtAl2003/FrankEtAl.e
:- call_pel_directive(include('examples/FrankEtAl2003/FrankEtAl.e')).

:-was_s_l('/pack/logicmoo_ec/test/ec_planner/ectest/Story1.e',30).
% agent Bob, Jilly
t(agent,bob).
t(agent,jilly).


:-was_s_l('/pack/logicmoo_ec/test/ec_planner/ectest/Story1.e',32).
% !HoldsAt(Raining(),0).
holds_at(not(raining()),0).


% !HoldsAt(SunShining(),0).
holds_at(not(sunShining()),0).


:-was_s_l('/pack/logicmoo_ec/test/ec_planner/ectest/Story1.e',36).
%;; must play same game


% (HoldsAt(PlaySoccer(Bob),1) & HoldsAt(PlaySoccer(Jilly),1)) |
% (HoldsAt(PlayHideAndSeek(Bob),1) & HoldsAt(PlayHideAndSeek(Jilly),1)) |
% (HoldsAt(PlayComputerGame(Bob),1) & HoldsAt(PlayComputerGame(Jilly),1)).
:-was_s_l('/pack/logicmoo_ec/test/ec_planner/ectest/Story1.e',36).
(   holds_at(playSoccer(bob), 1),
    holds_at(playSoccer(jilly), 1)
;   holds_at(playHideAndSeek(bob), 1),
    holds_at(playHideAndSeek(jilly), 1)
;   holds_at(playComputerGame(bob), 1),
    holds_at(playComputerGame(jilly), 1)
).


%;; one wins


:-was_s_l('/pack/logicmoo_ec/test/ec_planner/ectest/Story1.e',42).
% HoldsAt(Win(Bob),1) | HoldsAt(Win(Jilly),1).
 (   holds_at(win(bob), 1)
   ;   holds_at(win(jilly), 1)
   ).

:-was_s_l('/pack/logicmoo_ec/test/ec_planner/ectest/Story1.e',44).
% range time 0 1
:- call_pel_directive(range(time, 0, 1)).

% range offset 0 0
:- call_pel_directive(range(offset, 0, 0)).
%; End of file.
:- call_pel_directive(translate(ending,
                                '/pack/logicmoo_ec/test/ec_planner/ectest/Story1.pel')).

% EDIT: https://github.com/logicmoo/logicmoo_workspace/edit/master/packs_sys/logicmoo_ec/test/ec_planner/ectest/Story1.pel 
% JENKINS: https://jenkins.logicmoo.org/job/logicmoo_workspace/lastBuild/testReport/logicmoo.ec.ec_planner.ectest/STORY1/ 
% ISSUE_SEARCH: https://github.com/logicmoo/logicmoo_workspace/issues?q=is%3Aissue+label%3ASTORY1 
% ISSUE: https://github.com/logicmoo/logicmoo_workspace/issues/ 

